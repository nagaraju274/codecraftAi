
import { GitBranch, Code, Wind, Terminal } from 'lucide-react';

export const cheatsheetData = [
  {
    id: 'git',
    title: 'Git & GitHub',
    description: 'Common commands for version control with Git.',
    category: 'Tools',
    icon: GitBranch,
    items: [
      { command: 'git init', description: 'Initializes a new Git repository in the current directory.' },
      { command: 'git clone [url]', description: 'Creates a local copy of a remote repository.' },
      { command: 'git add [file]', description: 'Stages a file for the next commit.' },
      { command: 'git add .', description: 'Stages all new and modified files.' },
      { command: 'git commit -m "[message]"', description: 'Commits the staged changes with a message.' },
      { command: 'git status', description: 'Shows the status of changes as untracked, modified, or staged.' },
      { command: 'git push', description: 'Uploads local repository content to a remote repository.' },
      { command: 'git pull', description: 'Fetches and merges changes from the remote repository to the local one.' },
      { command: 'git branch', description: 'Lists all of the branches in your repository.' },
      { command: 'git checkout [branch-name]', description: 'Switches to the specified branch.' },
      { command: 'git merge [branch-name]', description: 'Merges the specified branchâ€™s history into the current one.' },
    ],
  },
  {
    id: 'react-hooks',
    title: 'React Hooks',
    description: 'Essential hooks for managing state and side effects in React.',
    category: 'JavaScript',
    icon: Code,
    items: [
      { command: 'useState', description: 'Manages state in a functional component. Returns a stateful value and a function to update it.' },
      { command: 'useEffect', description: 'Performs side effects in functional components (e.g., data fetching, subscriptions).' },
      { command: 'useContext', description: 'Accepts a context object and returns the current context value.' },
      { command: 'useReducer', description: 'An alternative to useState for managing complex state logic.' },
      { command: 'useCallback', description: 'Returns a memoized callback function. Useful for performance optimizations.' },
      { command: 'useMemo', description: 'Returns a memoized value. Useful for performance optimizations.' },
      { command: 'useRef', description: 'Returns a mutable ref object whose .current property is initialized to the passed argument.' },
    ],
  },
   {
    id: 'javascript-es6',
    title: 'JavaScript (ES6+)',
    description: 'Modern syntax for variables, functions, and arrays.',
    category: 'JavaScript',
    icon: Code,
    items: [
      { command: 'const, let', description: 'Declares block-scoped variables. `const` for constants, `let` for re-assignable values.' },
      { command: '() => {}', description: 'Arrow function syntax, providing a more concise way to write functions.' },
      { command: 'const { a, b } = obj', description: 'Object destructuring to extract properties from an object.' },
      { command: 'const [a, b] = arr', description: 'Array destructuring to extract elements from an array.' },
      { command: '`Hello, ${name}`', description: 'Template literals for embedding expressions within strings.' },
      { command: 'arr.map(item => ...)', description: 'Creates a new array by applying a function to each element.' },
      { command: 'arr.filter(item => ...)', description: 'Creates a new array with all elements that pass a test.' },
      { command: 'arr.reduce((acc, cv) => ...)', description: 'Executes a reducer function on each element, resulting in a single output value.' },
      { command: 'async/await', description: 'Syntactic sugar for working with Promises, making async code look synchronous.' },
      { command: 'fetch(url)', description: 'Modern, Promise-based API for making network requests.' },
    ]
  },
  {
    id: 'python',
    title: 'Python',
    description: 'Common syntax for data structures, loops, and functions.',
    category: 'Python',
    icon: Code,
    items: [
        { command: 'print(f"Value: {var}")', description: 'Prints a formatted string (f-string) to the console.' },
        { command: '[x**2 for x in range(5)]', description: 'List comprehension for creating a new list based on an existing iterable.' },
        { command: 'my_dict["key"]', description: 'Accesses the value associated with a key in a dictionary.' },
        { command: 'my_dict.get("key", default)', description: 'Accesses a dictionary value safely, providing a default if the key does not exist.' },
        { command: 'for item in my_list:', description: 'Iterates over each item in a list.' },
        { command: 'if x > y:', description: 'Executes a block of code if a condition is true.' },
        { command: 'def my_func(arg1):', description: 'Defines a new function with a single argument.' },
        { command: 'import library as lib', description: 'Imports a library and gives it a shorter alias.' },
        { command: 'with open("file.txt") as f:', description: 'Opens a file and ensures it is properly closed, even if errors occur.' },
    ]
  },
    {
    id: 'tailwind',
    title: 'Tailwind CSS',
    description: 'Core concepts and utility classes for rapid UI development.',
    category: 'CSS',
    icon: Wind,
    items: [
      { command: 'p-4', description: 'Applies 1rem of padding on all sides.' },
      { command: 'pt-4', description: 'Applies 1rem of padding to the top.' },
      { command: 'm-4', description: 'Applies 1rem of margin on all sides.' },
      { command: 'mt-4', description: 'Applies 1rem of margin to the top.' },
      { command: 'flex', description: 'Applies display: flex to an element.' },
      { command: 'grid', description: 'Applies display: grid to an element.' },
      { command: 'grid-cols-3', description: 'Creates a grid with three columns of equal width.' },
      { command: 'items-center', description: 'Aligns flex or grid items to the center.' },
      { command: 'justify-center', description: 'Justifies flex or grid items to the center.' },
      { command: 'bg-blue-500', description: 'Sets the background color to a shade of blue.' },
      { command: 'text-white', description: 'Sets the text color to white.' },
      { command: 'rounded-lg', description: 'Applies a large border radius to an element.' },
      { command: 'shadow-md', description: 'Applies a medium box shadow.' },
      { command: 'hover:bg-blue-600', description: 'Changes the background color on hover.' },
      { command: 'md:text-lg', description: 'Applies a large font size on medium screens and up.' },
    ],
  },
  {
    id: 'bash',
    title: 'Bash Commands',
    description: 'Essential commands for navigating and managing a Linux/macOS terminal.',
    category: 'Tools',
    icon: Terminal,
    items: [
      { command: 'ls', description: 'Lists directory contents.' },
      { command: 'cd [directory]', description: 'Changes the current directory.' },
      { command: 'pwd', description: 'Prints the current working directory.' },
      { command: 'mkdir [directory]', description: 'Creates a new directory.' },
      { command: 'touch [file]', description: 'Creates a new empty file.' },
      { command: 'cp [source] [destination]', description: 'Copies files or directories.' },
      { command: 'mv [source] [destination]', description: 'Moves or renames files or directories.' },
      { command: 'rm [file]', description: 'Removes a file.' },
      { command: 'rm -r [directory]', description: 'Removes a directory and its contents recursively.' },
      { command: 'cat [file]', description: 'Displays the content of a file.' },
      { command: 'grep "[pattern]" [file]', description: 'Searches for a pattern within a file.' },
    ],
  },
];
